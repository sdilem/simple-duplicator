#!/bin/bash
declare -a xxh64sums
declare -a duplicates
declare -a originals
mainindex=0
workspace="$1"
filecount_raw=0
duplicates_folder=""$workspace"/duplicates_found_by_simple_duplicator"

#####
#bu fonksiyon bir dizinin icindeki her bir elemani alip bakiyor.
#eger dosya ise sumini alip kaydediyor
#eger klasorse; bos ise omit ediyor, dolu ise klasorun ici icin fonksiyonu
#yeniden cagiriyor (recursive)
#notlar: 2>/dev/null ile xxh64sum'dan gelen error mesajlarini gizliyoruz.
#		 xxh64sum bize hata verip bos string dondururse onu kaydetmiyoruz.
#		 bashte fonksiyonlar icin global variable kullanmak zorundayiz. o
#		sebepten, xxh64sums arrayinin indexini tutan integer (mainindex)
#		fonksiyonun disinda. cunku fonksiyona parametre olarak array vere-
#		miyoruz. (kazmaca ama kullanisli)
#####
function add_files {
	for entry in "$1"/*
	do
	if [ ! -d "$entry" ]
	then		
		xxh64return=$(xxh64sum "$entry" 2>/dev/null)
		if [[ ! -z $xxh64return ]]; then
			xxh64sums+=("$xxh64return")
		fi
		let "mainindex++"
	elif [ -d "$entry" ]; then
		if [ ! -z "$(ls -A "$entry")" ]; then
			add_files "$entry"
		fi
	fi	
	echo -ne "\e[31m\e[1mStep 1: \e[0m $mainindex / $filecount_raw \r"
	done
}

#scripte gonderilen parametre bir klasor degilse yahut bos ise hata mesaji ver
#TODO gelecekte error mesaji programin nasil kullanilacagina dair aciklama icermeli
if [[ ! -d "$workspace" ]]; then
	echo -e "\e[31m\e[1mERROR: \e[0mThere is not such a folder! Please check again."
	exit
fi

#birinci kisim (tum dosyalardan sumlarin alinmasi)
tput civis
echo "Starting Job..."
filecount_raw=$(find "$workspace" -type f | wc -l)
add_files "$workspace"
echo -ne "\r\e[31m\e[1mStep 1: \e[0mDone!                   \n"

#ara hazirlik sumlarin siralanmasi duplicate klasoru olusturma
filecount=${#xxh64sums[@]}
mkdir -p "$duplicates_folder"
counter=0
aim=2
echo -ne "\e[31m\e[1mStep 2: \e[0m0%     \e[32m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\e[0m"
IFS=$'\n'
sortedsums=($(sort <<< "${xxh64sums[*]}"))
echo -ne "\r\e[31m\e[1mStep 2: \e[0m0%     \e[32m█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\e[0m"
unset IFS

#####
#ikinci kisim
#siralanan sumlardan birden fazla olan dosyalarin ilkini "originals" arrayine,
#ikinci ve daha fazla kopyalarini ise "duplicates" arrayine atiyor.
#progress barimiz da var biraz sekil (gerci benim tercihim hala fallik olani)
#####
while [ $counter -lt $(($filecount-1)) ]
do
	rawsum_current=${sortedsums[$counter]}
	rawsum_next=${sortedsums[$(($counter + 1))]}
	if [ ${rawsum_current:0:16} = ${rawsum_next:0:16} ]; then
		if [[ $counter -gt 0 ]]; then
			rawsum_prev=${sortedsums[$(($counter - 1))]}
			if [[ ! ${rawsum_current:0:16} = ${rawsum_prev:0:16} ]]; then
				originals+=("$rawsum_current")
			fi
		fi
		duplicates+=("$rawsum_next")
	fi
	progress=$(echo "scale=2; ($counter/$filecount*100)/1" | bc -l )
	progress=${progress%%.*}
	let "counter++"
	if [ $progress -gt $aim ]; then
		echo -ne "\r\e[31m\e[1mStep 2: \e[0m $progress%   "
		for (( i = 0; i < ( $progress / 2 ); i++ )); do
			echo -ne "\e[32m█"
		done
		aim=$(($aim+1))
	fi
done
echo -ne "\r\e[31m\e[1mStep 2:\e[0m Done!                                                      \nCompleting the job...\n"

#####
#final aksiyonlari
#eger hic duplicate yoksa olusturdugumuz duplicate klasorunu silelim etraf kirlenmesin.
#(klasoru daha onceden olusturmusak ve bu calistirmada hic duplicate yoksa, panik yok.
#klasor bos degilse silmiyoruz)
#duplicate varsa fonksiyonu calistirdigimiz ana klasordeki duplicates dizininde topluyoruz
#ana klasore bir de log file koyduk. asil (orijinal) kopya ve duplicateleri listeleyen
#####
if [ ${#duplicates[@]} = 0 ]
then
	if [ -z "$(ls -A "$duplicates_folder")" ]
	then
		rm -r "$duplicates_folder"
	fi
	echo "No duplicates found!"
else
	echo "Generated by simple-duplicator. ${#duplicates[@]} duplicate files found. $(date "+%Y-%m-%d-%H:%M:%S")" >> "$workspace/simple-duplicator_log"
	echo "Files moved to $duplicates_folder:" >> "$workspace/simple-duplicator_log"
	echo "========================================" >> "$workspace/simple-duplicator_log"
	for (( i = 0; i < ${#duplicates[@]}; i++ )); do
		filename=${duplicates[$i]:18}
	 	mv "$filename" "$duplicates_folder"
	 	echo "$filename" >> "$workspace/simple-duplicator_log"
	done
	echo "${#duplicates[@]} duplicate files found and moved to folder $duplicates_folder"
fi
echo "Done!"
tput cnorm

#sonraki versiyonlarda yapilmasi gerekenler:
#0-orijinal dosyalarin simdilik sadece isimlerini tuttum. log dosyasina eklenecekler. (bunun bu ver-
#siyonda olmasi lazimdi)
#1-sadece belirli mime typelari icin programi calistirma (bu cok onemli. bu ozellik olmadan program
#sistemin .mina bile koyabilir. dusunsene, icerigi bos olan tum dosyalari da topluyor mesela)
#2-dosyalari klasore doldururken ismi ayni olanlardan tek kopya birakiyor. hepsini tutmali mi? (niye)
#3-dosyalari once bulup, ne yapacagini (sileyim mi, klasore mi toplayayim yoksa karismayayim mi)
#sonra sorma ozelligi getirilecek.
#4-simdilik ilk buldugu dosyayi tutup digerlerini topluyor. hangisini tutacagina dair bir yaklasim
#gelistirilmeli. sanki bir iki madde daha vardi aklimda ama simdilik bu kadarini yazabildim.